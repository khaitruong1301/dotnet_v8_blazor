@page "/register"
@using System.ComponentModel.DataAnnotations

<EditForm Model="registerModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <h3 class="text-center mb-4">Đăng ký tài khoản</h3>

                <div class="mb-3">
                    <label class="form-label">Username</label>
                    <InputText class="form-control" @bind-Value="registerModel.Username" />
                    <ValidationMessage For="@(() => registerModel.Username)" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Email</label>
                    <InputText class="form-control" @bind-Value="registerModel.Email" />
                    <ValidationMessage For="@(() => registerModel.Email)" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Password</label>
                    <InputText type="password" class="form-control" @bind-Value="registerModel.Password" />
                    <ValidationMessage For="@(() => registerModel.Password)" />
                </div>

                <button type="submit" class="btn btn-primary w-100">Đăng ký</button>

                <div class="mt-3 text-center">
                    <span>Đã có tài khoản? <a href="/login">Đăng nhập</a></span>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private RegisterModel registerModel = new();

    private void HandleValidSubmit()
    {
        // Gọi API tạo tài khoản ở đây
        Console.WriteLine($"Registering: {registerModel.Username} - {registerModel.Email}");
    }

    public class RegisterModel
    {
        [Required(ErrorMessage = "Username không được để trống")]
        public string Username { get; set; }

        [Required(ErrorMessage = "Email không được để trống")]
        [EmailAddress(ErrorMessage = "Email không hợp lệ")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password không được để trống")]
        [MinLength(6, ErrorMessage = "Mật khẩu phải từ 6 ký tự trở lên")]
        public string Password { get; set; }
    }
}
